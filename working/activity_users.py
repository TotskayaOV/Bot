from loader import db, dp
from datetime import datetime
from external_database import writing_status, writing_jira_status, google_update, rewriting_data
from send_massage import notify
from keyboards import kb_div_nd_inline, kb_coord_inline
from .search_executor import chat_text
from external_database import name_company_number
from .comment_area import update_agent_comment


def call_admin(text_mess: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å —Ä–æ–ª—å—é admin —á–µ—Ä–µ–∑ notify
    :param text_mess: —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (str)
    :return:
    """
    my_adminset = db.get_user_access(user_role='admin')
    for i in range(len(my_adminset)):
        notify(my_adminset[i][1], text_mess)

def call_div(text_mess: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å —Ä–æ–ª—å—é admin –∏ divisional_mentor —á–µ—Ä–µ–∑ notify
    :param text_mess: —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (str)
    :return:
    """
    my_adminset = db.get_user_access(user_role='admin')
    my_divset = db.get_user_access(user_role='divisional_mentor')
    if my_divset:
        my_adminset.extend(my_divset)
    for i in range(len(my_adminset)):
        notify(my_adminset[i][1], text_mess)


def sent_to_com_applications(agent_set: set):
    """
    :param agent_set: –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤ –≤–∏–¥–µ (id, agent_name, phone_number, inn_number, company_name, date_up,
                    row_number, comment)
    :return: dict
    """
    data_dict = {'agent_name': agent_set[1], 'phone_number': agent_set[2], 'inn_number': agent_set[3],
                 'company_name': agent_set[4], 'date_up': agent_set[5], 'date_down': datetime.now(),
                 'comment': agent_set[7]}
    return data_dict


# –ü–æ–ª—É—á–∞–µ–º –Ω–∞ –≤—Ö–æ–¥ –¥–∞–Ω–Ω—ã–µ —Ç–∏–ø–∞ dict: {'–§–ò–û': '–ê–Ω–Ω–∂–µ–ª–∏–Ω–∞ –î–∂–æ–ª–∏', '–¢–µ–ª–µ—Ñ–æ–Ω': ' 79333064959', '–ò–ù–ù': '972734238895', '–ö–æ–º–ø–∞–Ω–∏—è': ' –õ –ö–∞—Ä–≥–æ –ú—Å–∫'}
# –ò–∑ –∫–æ—Ä—Ç–µ–∂–∞ –ø–æ–ª—É—á–∞–µ–º id –≤ dump (–¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è), —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é sent_to_com_applications —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å
# –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ com_applications, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
def verification_agent(data: dict) -> object:
    try:
        if len(db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))) == 1:
            info_from_dump = db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))[0]
        else:
            info_from_dump = db.get_dump_agent(phone_number=data.get('–¢–µ–ª–µ—Ñ–æ–Ω'))[0]
        text_mes = data.get('–§–ò–û') + " " + data.get('–ö–æ–º–ø–∞–Ω–∏—è') + '\n–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω üçå'
        call_div(text_mes)
        id_agent_dump = info_from_dump[0]
        text_wdb = sent_to_com_applications(info_from_dump)
        num_row = info_from_dump[6]
        db.remove_dump_agent(id_agent_dump)
        db.add_com_applications(text_wdb)
        num_table = name_company_number(text_wdb.get('company_name'))
        writing_status(str(num_row), num_table)
    except:
        call_admin(f"–ó–∞—Ç—ã–∫–∞–ª–∏ {data.get('–§–ò–û')} ü§¨")

def div_cancel_agent(data: dict):
    try:
        print(data)
        info_from_dump = db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))[0]
        text_mes = data.get('–§–ò–û') + " " + data.get('–ö–æ–º–ø–∞–Ω–∏—è') + '\n–æ—Ç–∫–∞–∑ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ üí©'
        call_admin(text_mes)
        print(text_mes)
        id_agent_dump = info_from_dump[0]
        text_wdb = sent_to_com_applications(info_from_dump)
        temp_variable = text_wdb.get('comment')
        text_wdb['comment'] = temp_variable + ', –æ—Ç–∫–∞–∑ –æ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞'
        num_row = info_from_dump[6]
        db.add_com_applications(text_wdb)
        db.remove_dump_agent(id_agent_dump)
        num_table = name_company_number(text_wdb.get('company_name'))
        print(num_table)
        writing_jira_status(str(num_row), num_table)
    except:
        call_div(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {data.get('–§–ò–û')} —É–∂–µ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —Ä–∞–±–æ—á–∏—Ö –¥–∞–Ω–Ω—ã—Ö ü§´")


def div_jira_agent(data: dict):
    try:
        if len(db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))) == 1:
            info_from_dump = db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))[0]
        else:
            info_from_dump = db.get_dump_agent(phone_number=data.get('–¢–µ–ª–µ—Ñ–æ–Ω'))[0]
        text_mes = data.get('–§–ò–û') + " " + data.get('–ö–æ–º–ø–∞–Ω–∏—è') + '\nJIRA ü§ì'
        call_div(text_mes)
        id_agent_dump = info_from_dump[0]
        text_wdb = sent_to_com_applications(info_from_dump)
        temp_variable = text_wdb.get('comment')
        text_wdb['comment'] = temp_variable + ', JIRA'
        num_row = info_from_dump[6]
        db.add_com_applications(text_wdb)
        db.remove_dump_agent(id_agent_dump)
        num_table = name_company_number(text_wdb.get('company_name'))
        writing_jira_status(str(num_row), num_table)
    except:
        call_div(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ {data.get('–§–ò–û')} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —Ä–∞–±–æ—á–∏—Ö –¥–∞–Ω–Ω—ã—Ö")


async def div_update_agent(data: dict):
    """

    :param data:
    :return:
    """
    if len(db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))) == 1:
        info_from_dump = db.get_dump_agent(inn_number=data.get('–ò–ù–ù'))[0]
    else:
        info_from_dump = db.get_dump_agent(phone_number=data.get('–¢–µ–ª–µ—Ñ–æ–Ω'))[0]
    text_mes = data.get('–§–ò–û') + " " + data.get('–ö–æ–º–ø–∞–Ω–∏—è') + '\n–¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã ü§ì'
    call_admin(text_mes)
    num_row = info_from_dump[6]
    num_table = name_company_number(info_from_dump[4])
    value = rewriting_data(num_table, num_row, google_update(str(num_row), num_table))
    update_agent_comment(info_from_dump, value)
    my_adminset = db.get_user_access(user_role='admin')
    if (value.get('inn_number') == '') or (value.get('phone_number') == ''):
        my_divset = db.get_user_access(user_role='divisional_mentor')
        if my_divset:
            my_adminset.extend(my_divset)
        for y in range(len(my_adminset)):
            chat_id = my_adminset[y][1]
            text_mess = chat_text(value) + "\n–ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –î–ê–ù–ù–´–•"
            await dp.bot.send_message(chat_id, text=text_mess, reply_markup=kb_div_nd_inline)
    else:
        my_coorset = db.get_user_access(user_role='coordinator')
        if my_coorset:
            my_adminset.extend(my_coorset)
        for y in range(len(my_adminset)):
            chat_id = my_adminset[y][1]
            text_mess = chat_text(value)
            await dp.bot.send_message(chat_id, text=text_mess, reply_markup=kb_coord_inline)
