from loader import dp
from aiogram.types import CallbackQuery, Message
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from keyboards import other_company
from keyboards import kb_cancel_fsm
from working import add_new_comment
class OtherCompany(StatesGroup):
    inn_number = State()
    comment = State()

# "text": "–§–ò–û:–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á\n–¢–µ–ª–µ—Ñ–æ–Ω: 79163000079\n–ò–ù–ù:79199700600\n–ö–æ–º–ø–∞–Ω–∏—è: –ò–∑–∏–ª–æ–¥–∂–∏—Å—Ç–∏–∫ –ú—Å–∫"
@dp.callback_query_handler(other_company.filter(verif='banana'), state=None)
async def inn_agent(callback: CallbackQuery, state: FSMContext, message=None):
    await OtherCompany.inn_number.set()
    message = callback.message
    string_callback = callback.message.text
    my_list = string_callback.split('\n')
    agent_dict = {}
    for i in range(len(my_list)):
        agent_dict[my_list[i].split(':')[0]] = my_list[i].split(':')[1]
    await state.update_data({'inn_number': agent_dict.get('–ò–ù–ù')})
    await message.answer(text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Å–ª—É–≥–∏ –∞–≥–µ–Ω—Ç',
                         reply_markup=kb_cancel_fsm)
    await OtherCompany.next()

@dp.message_handler(state=OtherCompany.comment)
async def company_catch(message: Message, state: FSMContext):
    await state.update_data({'comment': f'—Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ—Ç —Å {message.text}'})
    data = await state.get_data()
    try:
        await add_new_comment(data)
    except:
        await message.answer(text='–î–∞–Ω–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä —É–∂–µ –∏–∑–º–µ–Ω–∏–ª —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å üòé')
    await state.reset_data()
    await state.finish()
